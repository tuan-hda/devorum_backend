name: Deploy on QA

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
    
jobs:
  deploy_on_qa:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        
      - name: Create users env file
        working-directory: ./users
        run: |
          touch .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo PORT=8000 >> .env
          cat .env

      - name: Create ZIP deployment package
        run: zip -r deploy_package.zip ./

      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.QA_HOST }}
          username: ${{ secrets.QA_USERNAME }}
          port: 22
          key: ${{ secrets.KEY }}
          source: "deploy_package.zip"
          target: "/opt/deploy/"

      - name: Set permissions for private key
        run: |
          echo "${{ secrets.KEY }}" > key.pem
          chmod 600 key.pem

      - name: Unzip file
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.QA_USERNAME }}@${{ secrets.QA_HOST }} 'cd /opt/deploy && sudo chmod 777 ./deploy_package.zip && unzip -o ./deploy_package.zip -d ./devorum_backend'
      
      - name: build -> stop running docker compose -> up again
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.QA_USERNAME }}@${{ secrets.QA_HOST }} 'cd /opt/deploy/devorum_backend && docker-compose build && docker-compose stop && docker-compose up -d'

      - name: Remove zip file
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.QA_USERNAME }}@${{ secrets.QA_HOST }} 'cd /opt/deploy && rm deploy_package.zip'



