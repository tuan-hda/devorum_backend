name: Deploy on QA

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write

jobs:
  deploy_on_qa:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        
      - name: Create users env file
        working-directory: ./users
        run: |
          touch .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo PORT=8000 >> .env
          cat .env

      - name: Create ZIP deployment package
        run: zip -r deploy_package.zip ./

      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: 22
          key: ${{ secrets.KEY }}
          source: "deploy_package.zip"
          target: "/opt/deploy/"

      - name: Set permissions for private key
        run: |
          echo "${{ env.KEY }}" > key.pem
          chmod 600 key.pem

      - name: Stop running docker compose
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem "${{ secrets.USERNAME }}"@"${{ secrets.HOST }}" 'cd /opt/deploy/devorum-backend && docker-compose stop'

      - name: Unzip file
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem "${{ secrets.USERNAME }}"@"${{ secrets.HOST }}" 'sudo chmod 777 /opt/deploy/deploy_package.zip && unzip -o /opt/deploy/deploy_package.zip -d ./devorum_backend'

      - name: Run docker compose again
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem "${{ secrets.USERNAME }}"@"${{ secrets.HOST }}" 'cd /opt/deploy/devorum-backend && docker-compose build && docker-compose up -d'

      # - name: configureawscredentials
      #   uses: aws-actions/configure-aws-credentials@v4.0.1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1

      # - name: Upload package to S3 bucket
      #   run: aws s3 cp deploy_package.zip s3://devorum-beanstalk-bucket/

      # - name: Create new ElasticBeanstalk Application Version
      #   run: |
      #     aws elasticbeanstalk create-application-version \
      #     --application-name devorum-backend \
      #     --source-bundle S3Bucket="devorum-beanstalk-bucket",S3Key="deploy_package.zip" \
      #     --version-label "ver-${{ github.sha }}" \
      #     --description "commit-sha-${{ github.sha }}"

      # - name: Deploy new ElasticBeanstalk Application Version
      #   run: aws elasticbeanstalk update-environment --environment-name Devorum-backend-env --version-label "ver-${{ github.sha }}"



